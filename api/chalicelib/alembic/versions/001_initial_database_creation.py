"""Initial Database Creation

Revision ID: 000000000001
Revises: None
Create Date: 2021-02-28 21:59:44.964998

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy.orm import sessionmaker

# revision identifiers, used by Alembic.
revision = '000000000001'
down_revision = None
branch_labels = None
depends_on = None


Session = sessionmaker()
def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    session = Session(bind=bind)
    session.execute('create extension if not exists "uuid-ossp";')

    book_statuses_table = op.create_table(
        'dim_book_statuses',
        sa.Column(
            'id',
            postgresql.UUID(as_uuid=True),
            server_default=sa.text('uuid_generate_v4()'),
            nullable=False
        ),
        sa.Column('name', sa.String(length=2048), nullable=False),
        sa.Column('display_name', sa.String(length=2048), nullable=False),
        sa.Column('order_index', sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table(
        'dim_users',
        sa.Column(
            'id',
            postgresql.UUID(as_uuid=True),
            server_default=sa.text('uuid_generate_v4()'),
            nullable=False
        ),
        sa.Column('name', sa.String(length=2048), nullable=False),
        sa.Column('email', sa.String(length=2048), nullable=False),
        sa.Column('password', sa.LargeBinary(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('email')
    )
    op.create_table(
        'fct_sessions',
        sa.Column(
            'id',
            postgresql.UUID(as_uuid=True),
            server_default=sa.text('uuid_generate_v4()'),
            nullable=False
        ),
        sa.Column('token', sa.String(), nullable=False),
        sa.Column(
            'timestamp',
            sa.DateTime(timezone=True),
            server_default=sa.text('now()'),
            nullable=True
        ),
        sa.Column('dim_user_id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.ForeignKeyConstraint(['dim_user_id'], ['dim_users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('token')
    )

    book_statuses_fixture = [
        {
            'id': 'bef88212-a634-495b-984f-1db61bfd7235',
            'name': 'pre-writing',
            'display_name': 'Pre-Writing',
            'order_index': 0,
        },
        {
            'id': '606246d3-b0d8-4621-b9ea-319035996a90',
            'name': 'writing',
            'display_name': 'Writing',
            'order_index': 1,
        },
        {
            'id': 'c8262d58-2ca3-427f-9e60-af75c2505e20',
            'name': 'editting',
            'display_name': 'Editting',
            'order_index': 2,
        },
        {
            'id': '66a1e4f2-d305-47ef-aed0-debb102ca6d2',
            'name': 'reviewing',
            'display_name': 'Reviewing',
            'order_index': 3,
        },
        {
            'id': 'a3feedcb-8bc4-4f27-9cd2-acbef2d6a624',
            'name': 'revising',
            'display_name': 'Revising',
            'order_index': 4,
        },
        {
            'id': 'ba8b385e-587f-4109-ab4b-00c5310a66df',
            'name': 'publishing',
            'display_name': 'Publishing',
            'order_index': 5,
        },
    ]
    op.bulk_insert(book_statuses_table, book_statuses_fixture)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('fct_sessions')
    op.drop_table('dim_users')
    op.drop_table('dim_book_statuses')
    # ### end Alembic commands ###
